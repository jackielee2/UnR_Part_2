=================================================================================
1. 블루 프린트 개요.
=================================================================================
	
	----------
	-	개요..
	----------

		-----------------
		1]	블루 프린트..
		-----------------

			-	언리얼 엔진의
				비주얼 스크립팅 시스템..

			-	일반적인 프로그래밍에서 사용하는
				변수나 함수 등의 요소를
				노드 단위로 구성 및 연결하여
				개발자가 원하는 동작을 하도록
				설정..

			-	액터에 소스 코드를
				연결하는 과정을
				편하게 하기 위한 방식..
				-	쉬운 코딩을 위한
					수단은 아님..
				-	프로그래밍에 대한
					개념의 이해가 필요..



		----------------------
		2]	블루 프린트 특징..
		----------------------

			-	기본 단위..
				-	노드..

			-	노드와 노드사이에는
				[ 제어 ]와 [ 데이터 ]가
				전송됨..
				-	제어와 데이터의
					흐름은 선으로 연결..

			-	제어핀		:	|>
				데이터 핀	:	*

			-	제어와 데이터는
				왼쪽에서 오른쪽으로 진행..

			-	입력 및 출력을 처리하는 노드는
				입력핀이 왼쪽,
				출력핀이 오른쪽에 위치..



		-----------------
		3]	노드의 종류..
		-----------------

			-----------------
			1)	이벤트 노드..
				[ 참고 : 이벤트 노드.PNG ]
			-----------------

				-	이벤트..
					-	프로그램에 의해
						감지되고 처리될 수 있는
						동작이나 사건..
					-	어떤 일이 발생하면
						신호를 발생시키는 구조..

					예)	마우스 클릭 이벤트,
						타이머 이벤트 등..

				-	블루프린트는 대부분
					이벤트로부터 시작..

				-	이벤트 노드는
					빨간색으로 표시..


			---------------
			2)	변수 노드..
				[ 참고 : 변수 - 1,2.PNG ]
			---------------

				-	변수..
					-	프로그램이 실행되는 동안
						데이터를 관리하는
						메모리 공간..


				-	변수 생성 시
					고려 사항..

					-	자료형..
						-	관리할 수 있는 값의
							타입과 크기..

					-	이름..
						-	사용할 메모리 공간의
							이름..


			-----------------
			3)	연산자 노드..
				[ 참고 : 연산자.PNG ]
			-----------------

				-	데이터를 조작하거나
					계산을 담당..

					예)	사칙 연산, 비교 등..

				-	구성..

					-	입력 핀..
						-	피연산자의 값을 입력..

						출력 핀..
						-	연산 결과를 반환..

				-	연산자의 자료 유형은
					핀의 색으로 구분..

				-	연산은 왼쪽에서 오른쪽으로 진행..
					-	연산자 우선순위는
						적용되지 않음..

					[ 참고 : 연산자 우선순위.PNG ]

					예)	5 + 3 / 2

						-	수학..
							==>		5 + ( 3 / 2 )
							
							언리얼..
							==>		( 5 + 3 ) / 2


			---------------
			4)	함수 노드..
				[ 참고 : 함수.PNG ]
			---------------

				-	하나의 특별한 목적을
					수행하기 위해 독립적으로
					설계된 코드 집합..

				-	대부분의 함수는
					하나 이상의 입력 값을 받으며
					자체 처리 또는
					하나 이상의 결과 값을 반환..

				-	목적..
					-	반복적인 작업을
						효율적으로 처리..

					-	코드의 가독성 증가..

					-	유지보수 용이..

				-	언리얼은 다양한 내장함수 노드를
					지원하며 필요에 따라
					직접 함수 노드를 만들수 있음..


			---------------
			5)	제어 노드..
				[ 참고 : 제어.PNG ]
			---------------

				-	프로그램의
					흐름을 제어..

				-	조건에 따른 처리,
					특정 부분 반복 등..


			--------------------
			6)	시간 관련 노드..
				[ 참고 : 시간관련노드.PNG ]
			--------------------

				-	시간의 흐름에 따라
					특정한 처리를 담당..


			--------------------
			7)	형변환 노드..
				( Type Casting )
				[ 참고 : 형변환 노드.PNG ]
			--------------------

				-	자료의 형(Type)을 강제로
					바꾸기 위한 노드..
					-	대부분 자동으로
						추가 됨..

				-	작은 타입이 큰 타입으로
					변환되는 것만 가능..


			--------------------
			8)	변수의
				Get / Set 노드..
			--------------------

				-	Get 노드..

					-	변수의 값을 읽는 노드..
					-	값을 반환..
				
				
				-	Set 노드..

					-	변수에 값을
						저장하는 노드..

					-	Set 노드는 명령..
						-	왼쪽의 [ 입력 제어핀 ]에
							명령을 연결하지 않으면
							( 또는 이벤트 )
							동작하지 않음..



		----------------------
		4]	주요 블루 프린트..
		----------------------

			------------------------
			1)	클래스 블루 프린트..
			------------------------
			
				-	레벨에 독립적인
					명령을 작성..

				-	씬에 설치할 각종 액터, 사운드,
					카메라, 파티클 등에서 발생하는
					이벤트와 움직이는 액터의 동작 등을
					처리하기 위해 사용..

				-	가장 일반적인 블루 프린트..
					-	액터에 하나씩 할당..
					-	블루 프린트 액터..

				-	블루프린트 액터를 씬에 설치하면
					블루프린트에 설정한 절차대로 동작..

			
			----------------------
			2)	레벨 블루 프린트..
			----------------------
				
				-	게임의 모든 레벨(씬)에
					하나씩 할당되어 있는
					블루프린트..

				-	레벨에 설치된 각종 액터와
					상호 작용을 통해 게임을 진행..

				-	레벨 특유의 명령처리를
					( 게임 시스템 등.. )
					작성할 때 사용..

				-	레벨의 메인 프로그램에 해당..
					-	다른 레벨의 내용은
						참조 불가..


			--------------------------
			3)	게임 모드 블루프린트..
			--------------------------

				-	게임의 모드와
					게임의 설정 등을 위해 사용..

				-	따로 작성하지 않으면
					언리얼에서 기본으로 제공하는
					게임 모드 블루프린트가 사용 됨..


			---------------------
			4)	위젯 블루프린트..
			---------------------

				-	UI를 만들기 위한
					블루프린트..

=================================================================================//