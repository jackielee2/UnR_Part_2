=================================================================================
1-1. 블루 프린트 맛보기..
=================================================================================

	---------------
	1.	화면 구성..
	---------------
		
		--------------------
		1]	주요 구성 요소..
		--------------------

			------------
			-	뷰포트..
			------------

				-	컴포넌트를 추가,
					편집하는 화면..

				-	메시 데이터나 라이트
					등을 설정 가능..


			-------------------------
			-	Construction Script..
			-------------------------

				-	게임을 플레이 할때
					맨 처음 실행되는 BP..

				-	게임 초기화 작업에 적당..
					예)	액터의 머터리얼이나
						캐릭터를 설정,
						게임 규칙 불러오기 등..
			

			-------------------
			-	이벤트 그래프..
			-------------------
				-	이벤트를 매개로 벌어지는
					게임의 다양한 상황 처리를
					구성하는 그래프..

				-	이벤트..

					-	특정 상황을 기점으로
						함수를 불러들이는 구조..

					-	예)	컨트롤이나 키보드에서
							입력 발생,
							다른 액터와 충돌..
							


	--------------------------
	2.	간단한 BP 만들기 - 1..
		참조 : [ SimpleBP_1 ]
	--------------------------

		----------
		0]	개요..
		----------

			-	" 2 + 3 "을 계산한
				결과를 뷰포트창에
				표시하는 BP 작성..



		--------------------
		1]	새 레벨 만들기..
		--------------------

			1)	[ 새레벨 ]
				> [ Default ] 선택..

			2)	[ 콘텐츠 창 ]
				> [ Simple_BP ]
				> [ Maps ] 폴더 생성 후
				저장..

				-	이름..
					-	"Simple_BP"


		--------------------
		2]	기본 액터 추가..
		--------------------

			1)	[ 액터 배치 ]
				> [ 기본 ]
				> [ 빈 액터 ]
				드래그 앤 드롭
				to 뷰포트 창..
				-	이름..
					-	"BP_Test"

			2)	트랜스폼 정보
				리셋..

				-	빈 액터..
					-	트랜스폼 정보만
						가진 액터..
					-	컴포넌트를 추가하여
						속성을 적용..



		--------------------
		3]	BP 데이터 세팅..
		--------------------

			1)	[ 콘텐츠 창 ]
				> [ Simple_BP ]
				> [ BluePrints ] 폴더 생성..

			2)	[ 월드 아웃 라이너 ]
				> [ Actor ] 선택..

			3)	[ 디테일 탭 ]
				> [ BP 버튼 ] ( [ +Add ] 옆에 있음.. )
				> [ 새로운 BP 스크립트 컴포넌트 ]
				> [ BP 클래스 생성 ]

				-	이름..
					-	"BP_Test"
					부모
					-	[ Actor ]
					경로
					-	[ Simple_BP ]
						> [ BluePrints ] 선택.




		-----------------
		4]	새노드 추가..
		-----------------

			1)	[ 이벤트 그래프 ] 열기..


			2)	[ BeginPlay 이벤트 ]
				> [ 출력 제어핀 ] 당기기..

				-	[ BeginPlay 이벤트 ]
					-	게임을 플레이했을 때
						한 번만 호출되는 이벤트..


				-	노드..

					-	그래프에서 사용할 수 있는
						이벤트, 함수 호출,
						흐름 제어 동작, 변수 등과
						같은 오브젝트..

					-	특정 그래프의 함수나
						그 함수가 들어있는
						BP를 정의하는 데 사용..


				-	핀..
					-	노드의 입출력을 위해
						와이어를 연결하는 부분..


					-	주요 핀..

						-	입력 제어 핀..

							-	좌 상단 삼각형 모양의
								하얀 핀..

							-	이 핀에 연결된 이전 노드의
								처리가 완료되면
								해당 노드의 처리가 진행..


						-	출력 제어 핀..

							-	우 상단 삼각형 모양의
								하얀 핀..

							-	해당 노드 처리가 완료되면
								이 핀에 연결된 다음 노드의
								처리가 진행..


						-	입력 핀..

							-	좌측 원형 핀..

							-	노드 처리에 필요한 정보를
								( 값, 대상 액터 정보 등 )
								받는 핀..


						-	출력 핀..
							-	우측 원형 핀..
							-	노드에서 처리한 결과를
								다른 노드에 전달하는 핀..


				-	당기기..
					-	핀에서 와이어를
						드래그 앤 드롭하는 것.



			3)	[ 실행가능 액션 ]
				> [ 검색 ]
				> "print string" 검색..

				-	[ Print String 함수 ] 노드 추가..


			4)	[ 이벤트 그래프 ]의
				빈 공간에 마우스 우클릭..
				-	"add" 검색..
				->	[ Operators > add ] 선택..
				->	[ 덧셈 연산 노드 ] 생성..
				->	핀에 마우스 우클릭..
				->	[ Pin > Conversion > To Interger ] 선택..

			6)	입력핀에 각각
				2, 3 입력..

			7)	[ int + int ] > [ 출력 핀 ]
				
				------->
				
				[ Print String 함수 ] > [ In String 핀 ]

				-	[ 형변환 노드 ]

					-	연결하려는 노드의
						타입이 서로 다른 경우,
						대상 노드의 타입으로
						변환해주는 노드..

					-	서로 다른 타입을
						연결할 때
						자동으로 추가 됨..


		----------------------
		5]	컴파일 버튼 클릭..
		----------------------

			-	컴파일..

				-	작성한 프로그래밍의
					문법적 오류 검사..



		--------------------
		6]	실행 및 테스트..
		--------------------
			-	[ 툴바 ]
				> [ 플레이 ] 클릭.



	--------------------------
	3.	간단한 BP 만들기 - 2..
		참조 : [ SimpleBP_2 ]
	--------------------------

		----------
		0]	개요..
		----------

			-	플레이어가 액터와 충돌하면
				표시 / 숨김이 토글 되는
				클래스 블루 프린트 생성..


		---------------
		1]	새 프로젝트
			만들기..
		---------------

			1)	템플릿..
				-	삼인칭..

			2)	시작용 콘텐츠..
				-	포함..

			3)	폴더 생성..
				-	"_SimpleBP_2"


		-------------
		2]	맵 복제..
		-------------
			
			1)	맵 폴더 생성..
			
				-	[ 콘텐츠 창 ]
					> [ _SimpleBP_2 ]
					> [ Maps ]..
			
			2)	[ ThirdPersonExampleMap ] 복제..
				-	이름..
					-	"HelloBP"

				-	[ Maps ] 폴더로 이동..
				


		-------------
		3]	BP 생성..
		-------------
			
			1)	BP 폴더 생성..
			
				-	[ 콘텐츠 창 ]
					> [ _SimpleBP_2 ]
					> [ BluePrints ] 생성..


			2)	BP 생성..
			
				1)	[ BluePrints 폴더 ]에
					마우스 우클릭..

				2)	[ 팝업 창 ]
					> [ BP Class ] 선택..
					-	이름
						-	"HelloBP"
					부모
						-	[ Actor ]
				
					드래그 앤 드롭 to
					[ 뷰포트 창 ]..
				
		-------------
		4]	BP 편집..
		-------------

			1)	[ BP 편집창 ] 열기..
				
				방법 1)	[ HelloBP ] 더블 클릭..

				방법 2)	
					1)	[ 아웃 라이너 ] 또는
						[ 뷰포트 ]의 [ HelloBP ] 액터 선택..
						
					2)	[ 아웃 라이너 ]
						> [ HelloBP ] 우측의
						[ Edit HelloBP ] 선택..


			2)	메쉬 적용..

				1)	[ 컨텐츠 브라우저 ] > [ 검색창 ]에서
					"Shape_WideCapsule"를 검색..
				2)	드래그 앤 드롭 to
					[ HelloBlueprint ]
					> [ 컴포넌트 창 ]


		---------------
		5]	충돌 처리..
		---------------

			-	[ 컴포넌트 창 ]
				> [ Shape_WideCapsule ]
				선택..

			-	[ 디테일 창 ]
				> [ 콜리전 ]
				> [ 콜리전 프리셋 ]
				-	OverlapAllDynamic..
					-	Overlap..
						-	단순 충돌..
					-	Block
						-	물리 충돌..

		-----------------
		6]	이벤트 추가..
		-----------------

			-	[ 디테일 창 ]
				> [ 이벤트 ]
				> [ On Component Begin Overlap ]
				> [ + ] 클릭.


		-----------------
		7]	변수 만들기..
		-----------------
			
			-	[ 내 블루프린트 ]
				> [ 변수 ]
				> [ + ] 클릭..
				-	이름
					-	"HiddenMode"
					타입
					-	[ Boolean ]
		

		-------------------
		8]	이벤트 그래프에
			변수 배치..
		-------------------

			-	이하 [ HelloBlueprint ] 참고..

			-	[ On Component Begin Overlap ]에서
				충돌 감지..

				--->	[ HiddenMode ] 반전..
						-	[ Not Boolean ]

				--->	[ HiddenMode ] 값을 이용하여
						랜더링 여부 설정..
						-	[ Set Actor Hidden In Game ]

				--->	[ HiddenMode ] 상태를
						문자열로 출력..
						-	[ Print String ]


		--------------------
		9]	실행 및 테스트..
		--------------------
			


=================================================================================//

	[ 참고 ]
	
		[UE4] Collision - 콜리전과 콜리전 이벤트
		https://wergia.tistory.com/144
				
		[Unreal Engine] BP - 사칙 연산, 비교 연산, 논리 연산
		https://choi-dan-di.github.io/unreal/bp-calculation/

=================================================================================//

[ Quiz ]

	캐릭터가 액터와 접촉하면 접촉한 액터의 위치가
	랜덤으로 바뀌도록 합니다.


=================================================================================//