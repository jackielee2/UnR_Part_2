======================================================
5.	사운드 On & Off
	참고	:	[ _Jackie / _Map / BP_Sample ]
======================================================

	---------------------
	-	사운드 On & Off..
	---------------------

		----------
		-	목표..
		----------

			-	'J'키를 누를 때마다
				배경음악을 On / Off..

			-	배경음악의 On / Off 상태를
				디버깅 출력하는 BP 작성..



		----------
		-	실습..
		----------

			1)	[ 레벨 ]에 [ 사운드 파일 ] 추가..

				-	[ StarterContent ]
					> [ Audio ]
					> [ Starter_Music01 ]
					드래그 to [ 뷰포트 ]..

				-	[ 월드 아웃라이너 ]
					> [ Starter_Music01 ]
					> [ 디테일 ]
					> [ 활성화 ]
					> [ Auto Activate ]
						-	Off..
						-	Auto Activate..
							-	게임 시작시
								자동시작 여부 설정..

				
			2)	[ 레벨 BP ]에
				사운드 추가..
				
				-	[ 월드 아웃라이너 ]
					> [ Starter_Music01 ]
					
					드래그 to

					[ 레벨 BP ]
					> [ 이벤트 그래프 ]..
					-	[ Starter_Music01 ] 노드 추가됨..


				-	[ Starter_Music01 ]
					> [ 출력 핀 ]을 [ 드래그 ] 한후
					[ 버튼 ]을 [ 릴리즈 ]..
					-	[ 사운드 파일 관련 액션 ]이
						[ 팝업창 ]에 나옴.
					-	[ Audio ]
						> [ Play ] / [ Stop ]를
						검색하여 추가..


			3)	[ 월드 아웃라이너 ]
				> [ Starter_Music01 ]
				> [ 디테일 ]
				> [ Activation ]
				> [ Autio Activate ]
				-	Off..
				-	게임 시작하자마자
					소리가 연출되지 않도록
					설정..

				
				
		-------------------------------
		-	방법 1)	[ FlipFlop ] 이용..
		-------------------------------

			3 - 1)	이벤트 연결..

				-	버튼을 누를 때마다
					상태 반전..

					-	[ FlipFlop ]

						-	호출될 때마다
							[ A ], [ B ] 핀이
							번갈아가면서 실행..

							-	[ Is A 핀 ]

								-	현재 [ A핀 ]이
									활성화 상태인지 확인..

								-	[ A핀 ]이 활성화 상태면
									true, 아니면 false 반환..


						-	[ 키보드 이벤트 ]
							> [ 버튼 J ] 와 연결..


						-	연결..

							-	[ A핀 ]
								-->	[ Play ]

								[ B핀 ]
								-->	[ Stop ]



		-------------------------------
		-	방법 2)	if 활용..
					( [ Branch ] 노드 )
		-------------------------------
				
			3 - 2)	이벤트 연결..
				
				-	[ Toggle Active ] 노드 추가..

					-	해당 컴포넌트의
						활성화 상태를 토글..

						-	[ Context Sensitive ]
							-	현재 맥락과 관련있는
								노드만 검색..
							-	원하는 노드를 검색해도
								해당 노드가 노출되지 않으면
								끌 것..
					
				-	[ Audio Component ]
					> [ IsPlaying ] 추가..
					-	[ Audio Component ]가
						현재 사운드를
						재생 중인지 확인..

				-	분기( [ Branch ] 노드 ) 추가..

					-	[ Condition 핀 ]의
						[ 참 / 거짓 ] 여부에 따라
						흐름이 [ True / False ]으로
						나뉨..

======================================================
	
	[ 참고 ]

		UE4 Blueprint 정리
		https://jiwanm.github.io/ue4docs/blueprint/

======================================================