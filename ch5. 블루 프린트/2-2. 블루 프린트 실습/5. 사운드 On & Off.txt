======================================================
chapter 5.
참고		:	[ _Jackie / _Map / 1_Jackie_BA_Light_Mine ]
======================================================

	----------------------------
	-	사운드 On & Off
		[ 참고 : _Jackie / _Map / 1_Jackie_BA_Light_Mine ]
	----------------------------
		---------
		-	목표.
		---------

			-	'J'키를 누를 때마다 배경음악을 On / Off.

			-	배경음악의 On / Off 상태를 디버깅 출력하는 블프 작성.

		

			-	실행.
				
				1)		[ 씬 ]에 [ 사운드 파일 ] 추가.				

					-	[ StarterContent ] > [ Audio ] > [ Starter_Music01 ] DragTo 씬..

					-	[ 월드 아웃라이너 ] > [ Starter_Music01 ] > [ 디테일 ] > [ 활성화 ] > [ Auto Activate ]	:	Off.

						-	Auto Activate	:	게임 시작시 자동 시작.


				
				2)		[ 레벨 블프 ]에 사운드 추가.
				
					-	[ 월드 아웃라이너 ] > [ Starter_Music01 ] DragTo [ 레벨 블프 ] > [ 이벤트 그래프 ].

						-	[ Starter_Music01 ] > [ Get ]노드가 추가.

					-	[ Starter_Music01 ] > [ 출력 핀 ]을 [ 드래그 ] 한후 [ 버튼 ]을 [ 릴리즈 ] 하면
						[ 사운드 파일 관련 액션 ]이 [ 팝업창 ]에 나옴.

					-	[ Audio ] > [ Play ] / [ Audio ] > [ Stop ] 를 검색하여 추가.

				
				
			---------
			-	방법 1)		( [ FlipFlop ] 노드 활용 )
			---------
				3 - 1)		이벤트 연결.				

					-	버튼을 누를 때마다 상태 반전

						-	[ FlipFlop ]	:	호출될 때마다 A, B 핀이 번갈아가면서 실행.

												Is A 로 현재 실행중인 핀 확인.
										
												-	현재 A핀이 활성화 상태면 true, 아니면 false 반환.

						-	[ 키보드 이벤트 ] > [ 버튼 J ] 와 연결

						-	각각 A, B핀을 [ Play ] / [ Stop ]에 연결.



			---------
			-	방법 2)		{ if( [ Branch ] 노드 ) 활용 }
			---------
				
				3 - 2)		이벤트 연결.
				
					-	[ Toggle Active ] 노드 추가.

						-	해당 컴포넌트의 활성화 상태를 토글한다.

					
					-	[ Audio Component ] > [ IsPlaying ] 추가.

						[ IsPlaying ]	-	[ Audio Component ] 가 현재 사운드를 재생 중인지 확인.


					-	분기( [ Branch ] 노드 ) 추가.

						- [ Condition ]의 [ 참 / 거짓 ] 여부에 따라 흐름이 [ True / False ] 핀으로 나뉜다.