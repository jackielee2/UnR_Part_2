======================================================
chapter 12.
참고		:	[ _Jackie / _Map / 5_Jackie_BA_PhysicsAndSpawn ] 
======================================================

	----------------------------
	@	개요.
	----------------------------
		
		-	Physics
			-	액터의 물리적인 속성.

		-	Spawn
			-	게임 실행 중 액터를 씬에 추가하는 것.
			-	총알, 화살 등.

	----------------------------
	@	실습
	----------------------------

		---------------------
		+	목표		:	특정키( F 키 )를 누를때 마다 바운싱되는 공 생성하는 블프 만들기.
		---------------------

		*	[ _Jackie / _Map / 5_Jackie_BA_PhysicsAndSpawn ] 참고
		
		1)	[ 액터 배치 ] > [ 기본 ] > [ 구체 ] 를 씬에 추가.

			-	[ 트랜스폼 ] > [ 모빌리티 ]	:	[ 무버블 ]

			-	구체에 물리효과가 작용하지 않아 중력의 영향을 받지 않으므로
				공중에 떠있다.
		
		
		2)	구체의 Physics 속성 설정.

			-	[ 디테일 / Physics ] 주요 속성을 살펴본다.

			-		속성					|		기능
				--------------------------------------------------------------------
				Simulation Physics		|	액터의 운동에 물리적인 계산 적용 여부.
				--------------------------------------------------------------------
				Linear Damping			|	액터의 선형 운동저항.
				--------------------------------------------------------------------
				Angular Damping			|	액터의 굴림 저항.
				--------------------------------------------------------------------
				Enable Gravity			|	중력 적용 여부.
				--------------------------------------------------------------------
				Start Awake				|	게임 시작시 물리 적용 여부.
				--------------------------------------------------------------------
				Mass Scale				|	액터의 질량 스케일.
				--------------------------------------------------------------------
				Max Angular Velocity	|	최대 굴림 속도.
				--------------------------------------------------------------------
				
			-	[ Simulation Physics ]		:	On
				-	중력의 영향 --- > 추락.
				-	반발력에 대한 설정이 없으므로 심하게 튀어오르진 않는다.
				
		
		3)	반발력 적용( 피지컬 메터리얼 )

			-	피지컬 메터리얼

				-	액터에 물리적인 작용을 추가하는 머터리얼.

				-	[ 콘텐츠 브라우저 / 신규 추가 / 고급 애셋생성 / 피직스 / 피지컬 매터리얼 ]
					-	[ 이름 ]		:	[ Bouncy ].

				-	피지컬 매터리얼의 주요 속성.
					-	[ 피지컬 매터리얼 에디터 ]
						-	[ 피지컬 매터리얼 ] 더블 클릭

						속성							|		기능
					------------------------------------------------------------------------------------
					Friction						|	마찰 계수
					------------------------------------------------------------------------------------
					Friction Combine Mode			|	마찰 적용 방법( Average, Min, Multiply, Max )
					------------------------------------------------------------------------------------
					Override Friction Combine Mode	|	Friction Combine Mode 적용 여부.
					------------------------------------------------------------------------------------
					Restitution						|	반발력.
					------------------------------------------------------------------------------------
					Density							|	밀도.
					------------------------------------------------------------------------------------
					Raise Mass to Power				|	질량에 곱해지는 값.
					------------------------------------------------------------------------------------

				-	[ Restitution ]		:	[ 1 ]
					-	공이 튕기도록 하기위해 반발력( Restitution )을 설정한 후 테스트..

		
		4)	[ Sphere ]를 [ 블루 프린트 액터 ]로 만들기.

			-	[ 레벨 ] > [ Sphere ] 선택
				-	[ 디테일 ] > [ 블루프린트 / 스크립트 추가] 선택..
					-	[ Sphere_Blueprint ] 생성 됨..
				-	[ 이름 ]		:	[ BP_BounceBall ].

			-	[ 블루 프린트 에디터 ] 열기.
				-	[ BP_BounceBall ]를 더블 클릭..
				-	[ 컴포넌트 ] > [ Static Mesh Component ] > [ Collision ] > [ Phys Material Override ]	:	[ Bouncy ]..

			-	공에 대한 이벤트는 필요하지 않으므로 블루 프린트를 컴파일하고 저장..
				-	에디터를 닫고 씬에 추가한 공도 삭제.

		5)	[ 타깃 포인트 ] 추가.

			-	씬에 배치.
				-	[ 액터 배치 ] > [ 모든 클래스 ] > [ 타깃 포인트 ] 씬에 추가.

			-	[ 타깃 포인트 ]
				-	플레이어가 상호작용할 아이템을 월드에 배치하고 스폰시킬때 월드에 아이템을 스폰시킬 수 있는 점용 지점.
				-	공이 나타날 위치를 설정하는데 사용할 것임.

		6)	레벨 블프 작성.

			-	목표	
				-	[ F ] 키를 누를때 마다 [ 타깃 포인트 ]에서 [ BP_BounceBall ]을 생성( Spawn )하도록 노드 작성.

			1)	[ 키보드 F버튼 ] 이벤트 노드 추가.

			2)	[ SpawnActor From Class ] 노드 추가.

			3)	[ 월드 아웃라이너 ] > [ TargetPoint ( Get 노드 ) ] Drag to [ 블루 프린트 에디터 ].

			4)	[ TargetPoint ] > [ GetWorldTransform ]		------------->	[ SpawnActor From Class ] > [ Spawn Transform ]
																			-	[ Class ]	:	[ BP_BounceBall ]

			5)	테스트 
				-	[ F 키 ]를 눌러 공이 생성되어 튕기는지 확인.
				
					-	계속 누르면 공이 한줄로 쌓이면서 튀어오른다.
						-	공의 질량과 무게 중심이 완전히 똑같아서 생기는 현상.
					-	[ BP_BounceBall ]의 [ 블프 에디터 ]를 열고 공의 [ 무게 중심 ]을 옮긴다.
						-	[ 디테일 ] > [ Physics ] > [ Center Of Mass Offset ]		:	[ 0.1, 0.1, 0.1 ].
						-	테스트해보면 공이 랜덤으로 튕긴다.

			

